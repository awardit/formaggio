{
  "name": "@crossroads/formaggio",
  "version": "0.1.0",
  "description": "The cheesy form library",
  "main": "dist/index.esm.js",
  "dependencies": {},
  "devDependencies": {
    "@babel/core": "7.5.5",
    "@babel/plugin-proposal-nullish-coalescing-operator": "^7.4.4",
    "@babel/plugin-syntax-flow": "7.2.0",
    "@babel/plugin-transform-flow-strip-types": "7.4.4",
    "@babel/preset-env": "7.5.5",
    "@babel/preset-react": "7.0.0",
    "@babel/register": "^7.6.0",
    "@testing-library/react": "9.1.4",
    "ava": "2.2.0",
    "babel-eslint": "10.0.2",
    "cross-env": "5.2.0",
    "eslint-config-xo-flow": "0.1.0",
    "eslint-config-xo-react": "0.20.0",
    "eslint-plugin-flowtype": "3.12.1",
    "eslint-plugin-react": "7.14.2",
    "eslint-plugin-react-hooks": "1.6.1",
    "flow-bin": "0.102.0",
    "jsdom": "^15.1.1",
    "jsdom-global": "3.0.2",
    "jslint": "0.12.1",
    "ninos": "3.0.0",
    "nodemon": "^1.19.2",
    "npm-run-all": "4.1.5",
    "nyc": "14.1.1",
    "react": "16.9.0",
    "react-dom": "16.9.0",
    "rollup": "1.17.0",
    "rollup-plugin-babel": "4.3.3",
    "xo": "0.24.0"
  },
  "peerDependency": {
    "react": "*",
  },
  "scripts": {
    "build": "npm-run-all build:*",
    "build:rollup": "rollup -c rollup.config.js",
    "build:flow": "cp build/flowstub.js dist/index.esm.js.flow",
    "coverage": "nyc --reporter=html ava --verbose",
    "clean": "rm -rf dist",
    "distclean": "rm -rf package-lock.json node_modules dist",
    "flow": "flow check",
    "prepack": "npm run clean && npm run test && npm run build",
    "test": "npm-run-all test:*",
    "test:flow": "flow status",
    "test:ava": "ava --verbose",
    "test:xo": "xo",
    "watch": "nodemon -w src -w test --exec \"npm run -q test || true\""
  },
  "repository": {
    "type": "git",
    "url": "git@groot.crossroads.se:node_modules/formaggio.git"
  },
  "keywords": [
    "form",
    "react"
  ],
  "authors": [
    "Martin Wernst√•l <m4rw3r@gmail.com>",
    "Peter Asplund"
  ],
  "license": "ISC",
  "ava": {
    "babel": {
      "testOptions": {
        "presets": [
          [
            "@babel/preset-react"
          ],
          [
            "@babel/preset-env",
            {
              "loose": true,
              "shippedProposals": true,
              "targets": {
                "node": "current",
                "firefox": "50",
                "ie": "11"
              },
              "exclude": [
                "transform-typeof-symbol"
              ]
            }
          ]
        ],
        "plugins": [
          [
            "@babel/plugin-transform-flow-strip-types"
          ]
        ]
      }
    },
    "files": [
      "**/*.test.js"
    ],
    "sources": [
      "src/**/*.js",
      "**/src/**/*.js"
    ],
    "require": [
      "./test/_register",
      "jsdom-global/register"
    ],
    "powerAssert": true
  },
  "xo": {
    "extends": [
      "xo-flow",
      "xo-react"
    ],
    "ignores": [
      "dist",
      "**/rollup.config.js"
    ],
    "envs": [
      "node",
      "browser"
    ],
    "overrides": [
      {
        "files": "src/flowstub.js",
        "rules": {
          "import/no-useless-path-segments": "off"
        }
      },
      {
        "files": "test/*.js",
        "rules": {
          "ava/use-test": "off",
          "flowtype/require-parameter-type": "off",
          "flowtype/require-return-type": "off",
          "flowtype/no-unused-expressions": "off",
          "no-unused-expressions": "off",
          "quote-props": "off",
          "max-len": [
            "warn",
            140,
            {
              "ignoreStrings": true
            }
          ]
        }
      }
    ],
    "rules": {
      "brace-style": [
        "error",
        "stroustrup"
      ],
      "comma-dangle": [
        "error",
        {
          "arrays": "only-multiline",
          "objects": "only-multiline",
          "imports": "only-multiline",
          "exports": "only-multiline",
          "functions": "never"
        }
      ],
      "flowtype/array-style-complex-type": [
        "error",
        "verbose"
      ],
      "flowtype/array-style-simple-type": [
        "error",
        "verbose"
      ],
      "flowtype/delimiter-dangle": [
        "error",
        "only-multiline"
      ],
      "flowtype/newline-after-flow-annotation": [
        "error",
        "always"
      ],
      "flowtype/require-types-at-top": "warn",
      "flowtype/require-valid-file-annotation": [
        "error",
        "always",
        {
          "annotationStyle": "block"
        }
      ],
      "flowtype/require-return-type": [
        "error",
        "always",
        {
          "annotateUndefined": "always"
        }
      ],
      "flowtype/type-import-style": [
        "error",
        "declaration"
      ],
      "import/no-unassigned-import": [
        "error",
        {
          "allow": [
            "**/*.css",
            "**/*.scss"
          ]
        }
      ],
      "import/no-unresolved": "off",
      "import/order": "off",
      "indent": [
        "error",
        2,
        {
          "SwitchCase": 0
        }
      ],
      "lines-between-class-members": [
        "error",
        "always",
        {
          "exceptAfterSingleLine": true
        }
      ],
      "max-len": [
        "error",
        {
          "code": 100,
          "comments": 80
        }
      ],
      "no-case-declarations": "off",
      "no-unused-vars": [
        "error",
        {
          "varsIgnorePattern": "^React$"
        }
      ],
      "object-curly-spacing": [
        "error",
        "always"
      ],
      "quotes": [
        "error",
        "double",
        {
          "allowTemplateLiterals": true
        }
      ],
      "react/jsx-tag-spacing": [
        "error",
        {
          "closingSlash": "never",
          "beforeSelfClosing": "always",
          "afterOpening": "never",
          "beforeClosing": "never"
        }
      ],
      "unicorn/catch-error-name": [
        "error",
        {
          "name": "e"
        }
      ],
      "valid-jsdoc": "off"
    },
    "space": 2
  }
}
